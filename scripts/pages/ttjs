import {
  getMedia,
  getPhotographeById,
  getPhotographers,
} from "../api/fetch.api.js";
import { handleLike, mediaFactory } from "../factories/media.js";
import { infoDuPhotographe } from "../factories/media.js";
import { initModal } from "../utils/contactForm.js";
import { lightbox } from "../factories/media.js";
import {
  trierParDate,
  trierParPopularite,
  trierParTitre,
} from "../component/filter.js";
/* Cette fonction récupère tous les médias à l'aide de la fonction getMedia
 depuis l' API et les affiches sur la page photographer.html. Elle créer des éléments
  article pour chaque média et utilise la fonction Media(element).render() pour 
  générer le contenu HTML correspondant à chaque média.
*/

/* Cette fonction récupère l'ID du photographe à partir des paramètres d'URL
 (photographeId) 
et utilise cet ID pour récupérer les médias spécifiques de ce photographe à l'aide
 de la fonction getMedia.
 Les médias récupérés sont affichés dans la console avec console.log(media).  */
async function init() {
  const params = new URLSearchParams(document.location.search);
  const idDuPhotographe = params.get("photographeId");
  const id = Number.parseInt(idDuPhotographe);
  const media = await getMedia(id);
  const root = document.querySelector(".medias_content");
  console.log(media);

  //element represente une occurence du tableau des medias
  const photographe = await getPhotographeById(id);
  console.log(photographe);
  if (!photographe || !photographe.name) {
    console.error(
      "Les données du photographe sont incomplètes ou n’ont pas été correctement chargées."
    );
    return; // Sortie de la fonction si les données du photographe ne sont pas disponibles
  }
  root.innerHTML = "";

  media.forEach((element) => {
    const nodeMedia = mediaFactory(element, photographe.name).getMedia();
    const mediaContainer = document.createElement("div");
    mediaContainer.innerHTML = nodeMedia;
    root.appendChild(mediaContainer);
  });
  const mediaImages = root.querySelectorAll(".img_media");
  mediaImages.forEach((img, index) => {
    img.addEventListener("click", function (e) {
      e.preventDefault();
      const nodelightbox = lightbox(media[index], photographe.name);
      const lightboxContainer = document.querySelector(".lightbox_container");
      lightboxContainer.innerHTML = nodelightbox.carousel;
      lightboxContainer.style.display = "block"; // Assurez-vous que la lightbox est visible
    });
  });
  const listbox = document.querySelector(".listbox");

  listbox.addEventListener("change", function () {
    const critereDeTri = listbox.value;

    // Triez les médias en fonction du critère de tri sélectionné
    if (critereDeTri === "date") {
      trierParDate(media);
    } else if (critereDeTri === "titre") {
      trierParTitre(media);
    } else if (critereDeTri === "popularite") {
      trierParPopularite(media);
    }
    root.innerHTML = "";
    media.forEach((element) => {
      // mediaFactory pour générer le contenu HTML du média
      const nodeMedia = mediaFactory(element, photographe.name);
      root.innerHTML += nodeMedia.getMedia();
      //Ajoutez du média au DOM
      /* root.appendChild(media.getMedia());*/
      const mediaImg = document.querySelectorAll(".img_media");
      mediaImg.forEach((img) => {
        img.addEventListener("click", function () {
          const nodelightbox = lightbox(element);
          const lightboxContainer = document.querySelector(
            ".lightbox_container"
          );
          lightboxContainer.innerHTML = nodelightbox.carousel;
          root.style.display = "none";
        });
      });
    });
  });
  user(photographe);
  initModal();
}

function user(photographe) {
  const headerPresentation = document.querySelector(".photograph-header");
  const contenu = infoDuPhotographe(photographe);
  headerPresentation.innerHTML += contenu.getDom();
  console.log(headerPresentation);
}

// Appel de la fonction rend pour afficher tous les médias

// Appel de la fonction init pour récupérer les médias du photographe spécifié par l'ID
init();
